// ----------------
// Адаптивная сетка
// ----------------
//
// Сетка, изменяющия положение блоков на различных устройствах.
// Ячейки могут быть одновременно панелями `.pnl`.
//
// Дизайн сеток осуществляется на основе парадигмы mobile-first:
// в начале определяется положение ячеек на мобильных устройствах,
// затем дописываются классы для устройств среднего размера, а лишь затем
// для больших экранов.
//
// ```
// .grid[.grid-gutters][.grid-level-1]
//   .cell[.pnl[...]][.cell-s-1of1][.cell-m-1][.cell-l-2]
//   [.cell]
// ```

.grid {
  display: flex;
  flex-flow: row wrap;
}

.grid-align-baseline { align-items: baseline }
.grid-align-center { align-items: center }

.grid-gutters {
  margin: -(gap / 2);

  &.block {
    margin-top: (gap / 2);
    margin-bottom: (gap / 2);
  }

  > .cell {
    margin: (gap / 2);
  }
}

// --------------
// Размеры ячейки
// --------------
//
// Классы вида `.cell-...-{n}` (пр. `.cell-...-2`) определяют относительный
// размер колонки. Фактический размер определяется исходя из количества колонок
// в строке. В следующем примере первая ячейка занимает треть экрана, а вторая —
// две трети.
//
// ```
// .grid
//   .cell.cell-1
//   .cell.cell-2
// ```
//
// Если добавить еще одну ячейку `.cell.cell-1`, то первая и последняя станут
// занимать четверть экрана каждая, а вторая -- половину.

.cell {
  flex: 100%;
  box-sizing: border-box;
}

.cell-min {
  flex: 0 0 auto;
}

for i in (1..8) {

  .cell-{i} {
    flex: i;
  }

}

// ------------
// Mobile first
// ------------
//
// При дизайне сеток сначала определите расположение колонок с помощью
// классов `.cell-{n}`. При отсутствии класса подразумевается ширина 100%.
//
// Затем добавьте классы `.cell-m-{n}` для средних экранов.
//
// Затем добавьте классы `.cell-l-{n}` для больших экранов.

@media (min-width: screen-medium-min) {
  for i in (1..8) {

    .cell-m-min {
      flex: 0 0 auto;
    }

    .cell-m-{i} {
      flex: i;
    }

  }
}

@media (min-width: screen-large-min) {
  for i in (1..8) {

    .cell-l-min {
      flex: 0 0 auto;
    }

    .cell-l-{i} {
      flex: i;
    }

  }
}
